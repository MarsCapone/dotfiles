# Managed by chezmoi
# Generated on {{ output "date" }}

{{- if lookPath "starship" }}
# Load Starship (https://starship.rs)
eval "$(starship init zsh)"
{{- end}}

{{- if not (lookPath "starship") }}
echo "Install starship.rs, then rerun chezmoi"
{{- end}}

# Don't insert a tab character if nothing has been typed
zstyle ':completion:*' insert-tab false

# ???
zstyle ":completion:*:sudo:*" command-path $HOME/bin /usr/sbin /usr/bin

# Option stacking in docker
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# Use vim-mode
bindkey -v

# Options
setopt INC_APPEND_HISTORY   # multiple instances append history instead of overwriting
setopt EXTENDED_HISTORY     # include the timestamp in the history
setopt HIST_FIND_NO_DUPS    # don't show duplicates when searching history
setopt GLOB_DOTS            # let files beginning with `.` be matched without explicitly 
                            # specifying the dot.
setopt EXTENDED_GLOB        # more zsh globbing options. see `man zshexpn`
setopt NOMATCH              # if a pattern has no matches, print an error
setopt NO_CORRECT           # don't try to correct mis-spellings
setopt NO_BEEP              # don't beep if something goes wrong
setopt NO_LIST_BEEP

#== Antigen ==#
source $HOME/.zsh/external/antigen.zsh
antigen use oh-my-zsh
antigen bundles <<EOF
    safe-paste
    history
    command-not-found
    colorize
    colored-man-pages

{{ if eq .chezmoi.os "darwin" }}
    brew
    macos
{{ end }}
    
    pyenv
    pip
    python
    jenv
    rbenv
    git
    autojump

    zsh-users/zsh-completions
    zsh-users/zsh-autosuggestions
    zsh-users/zsh-syntax-highlighting
EOF

antigen apply

#== Aliases ==#

# Better ls
alias ls="lsd"
alias ll="lsd -l"
alias la="lsd -la"

# Tools
alias tldr="tldr -t base16 -o osx"
alias psql="pgcli"

# Python
alias py3="PYTHONWARNINGS=ignore ipython"

# Terraform
alias tf="terraform"
alias tfi='terraform init -backend-config=$TF_BACKEND_CONFIG'
alias tfp='terraform plan $TF_CLI_PARAMS -lock=false'
alias tfa='terraform apply $TF_CLI_PARAMS'

#== Other setup ==#

# Make sure pyenv is initialised
eval "$(pyenv init -)"

{{- if lookPath "cargo" }}
# Cargo (rust package manager)
source "$HOME/.cargo/env"
{{- end }}

{{- if lookPath "op" }}
# Autocompletion for 1Password
eval "$(op completion zsh)"; compdef _op op
{{- end }}

{{- if lookPath "direnv" }}
# Direnv
eval "$(direnv hook zsh)"
{{- end }}
